{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ameen\\\\Documents\\\\First Full Stack project\\\\client\\\\src\\\\components\\\\WorkoutTable\\\\workoutTable.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport Axios from 'axios';\nimport './workoutTableStyles.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst WorkoutTable = () => {\n  _s();\n  const {\n    tableName\n  } = useParams();\n  const [tableData, setTableData] = useState([]);\n  const [checkedRows, setCheckedRows] = useState({});\n  useEffect(() => {\n    // Fetch data based on the table name\n    Axios.get(`http://localhost:3001/tables/${tableName}`).then(response => {\n      const data = response.data;\n      setTableData(data);\n      // Initialize checkedRows with exercise IDs as keys and false as initial values\n      const initialCheckedRows = data.reduce((acc, exercise) => {\n        acc[exercise.id] = false;\n        console.log(acc);\n        return acc;\n      }, {});\n      setCheckedRows(initialCheckedRows);\n      console.log(\"length \" + checkedRows.length);\n    }).catch(error => {\n      console.error('Error fetching data:', error);\n    });\n  }, []);\n\n  // Toggle the checked state for the given row ID\n  const toggleRowChecked = id => {\n    setCheckedRows(prevState => {\n      return {\n        ...prevState,\n        [id]: !prevState[id]\n      };\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: tableName\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Sets\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Reps\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Weight\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Completed\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: tableData.map(exercise => /*#__PURE__*/_jsxDEV(\"tr\", {\n          className: checkedRows[exercise.id] ? 'checked' : '',\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            children: exercise.Exercise\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: exercise.Sets\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: exercise.Reps\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: exercise.Weight\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"tick\",\n              onClick: () => toggleRowChecked(exercise.id),\n              children: \"\\u2714\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 65,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 15\n          }, this)]\n        }, exercise.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 5\n  }, this);\n};\n_s(WorkoutTable, \"UlUVZc6gunPPQSszSsoYQuZRtxk=\", false, function () {\n  return [useParams];\n});\n_c = WorkoutTable;\nexport default WorkoutTable;\nvar _c;\n$RefreshReg$(_c, \"WorkoutTable\");","map":{"version":3,"names":["React","useEffect","useState","useParams","Axios","jsxDEV","_jsxDEV","WorkoutTable","_s","tableName","tableData","setTableData","checkedRows","setCheckedRows","get","then","response","data","initialCheckedRows","reduce","acc","exercise","id","console","log","length","catch","error","toggleRowChecked","prevState","children","fileName","_jsxFileName","lineNumber","columnNumber","map","className","Exercise","Sets","Reps","Weight","onClick","_c","$RefreshReg$"],"sources":["C:/Users/ameen/Documents/First Full Stack project/client/src/components/WorkoutTable/workoutTable.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { useParams } from 'react-router-dom';\r\nimport Axios from 'axios';\r\nimport './workoutTableStyles.css'\r\n\r\nconst WorkoutTable = () => {\r\n  const { tableName } = useParams();\r\n  const [tableData, setTableData] = useState([]);\r\n  const [checkedRows, setCheckedRows] = useState({});\r\n\r\n  useEffect(() => {\r\n    // Fetch data based on the table name\r\n    Axios.get(`http://localhost:3001/tables/${tableName}`)\r\n      .then((response) => {\r\n        const data = response.data;\r\n        setTableData(data);\r\n        // Initialize checkedRows with exercise IDs as keys and false as initial values\r\n        const initialCheckedRows = data.reduce((acc, exercise) => {\r\n          acc[exercise.id] = false;\r\n          console.log(acc);\r\n          return acc;\r\n\r\n\r\n        }, {});\r\n        setCheckedRows(initialCheckedRows);\r\n        console.log(\"length \"+checkedRows.length);\r\n      })\r\n      .catch((error) => {\r\n        console.error('Error fetching data:', error);\r\n      });\r\n  }, []);\r\n\r\n  // Toggle the checked state for the given row ID\r\n  const toggleRowChecked = (id) => {\r\n    setCheckedRows(prevState => {\r\n      return {\r\n        ...prevState,\r\n        [id]: !prevState[id]\r\n      };\r\n    });\r\n  };\r\n  \r\n\r\n  return (\r\n    <div>\r\n      <h2>{tableName}</h2>\r\n      <table>\r\n        <thead>\r\n          <tr>\r\n            <th>Name</th>\r\n            <th>Sets</th>\r\n            <th>Reps</th>\r\n            <th>Weight</th>\r\n            <th>Completed</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {tableData.map((exercise) => (\r\n            <tr key={exercise.id} className={checkedRows[exercise.id] ? 'checked' : ''}>\r\n              <td>{exercise.Exercise}</td>\r\n              <td>{exercise.Sets}</td>\r\n              <td>{exercise.Reps}</td>\r\n              <td>{exercise.Weight}</td>\r\n              <td>\r\n                <button className=\"tick\" onClick={() => toggleRowChecked(exercise.id)}>\r\n                  âœ”\r\n                </button>\r\n              </td>\r\n            </tr>\r\n          ))}\r\n        </tbody>\r\n      </table>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default WorkoutTable;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}